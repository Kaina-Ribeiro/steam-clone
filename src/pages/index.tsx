import { GetServerSidePropsContext } from 'next';
import Head from 'next/head';

import { NextPageWithLayout } from '@/types/pages/_app';
import { COOKIE_NAME } from '@/libs/contexts/twitchSession.context';
import { fetchApi } from '@/libs/utils/api';
import { Section } from '@/styles/sharedstyes';
import { Cover, GamesList, Screenshot } from '@/types/_api';
import { GameCard } from '@/components/GameCard';

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const { cookies } = context.req;

  if (!cookies || !cookies[COOKIE_NAME])
    return {
      props: {},
    };

  const gamesList = await (
    await fetchApi('/games', {
      method: 'POST',
      headers: new Headers({
        Authorization: 'Bearer ' + JSON.parse(cookies[COOKIE_NAME]).access_token,
      }),
      body: 'fields *,cover.*,screenshots.*;',
    })
  ).json();

  const genresList = await (
    await fetchApi('/genres', {
      method: 'POST',
      headers: new Headers({
        Authorization: 'Bearer ' + JSON.parse(cookies[COOKIE_NAME]).access_token,
      }),
      body: 'fields *;',
    })
  ).json();

  console.log(genresList);

  return {
    props: {
      gamesList,
    },
  };
}

type HomeProps = {
  gamesList: GamesList<Cover, Screenshot>;
};

const Home: NextPageWithLayout<HomeProps> = ({ gamesList }) => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Section gridColStart={3} gridColSpan={8} gridColums={12}>
        {gamesList && gamesList.length
          ? gamesList.map((game) => <GameCard key={game.id} game={game} />)
          : null}
      </Section>
    </>
  );
};

export default Home;
